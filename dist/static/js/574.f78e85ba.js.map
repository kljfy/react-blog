{"version":3,"file":"static/js/574.f78e85ba.js","mappings":"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","sources":["webpack://react-blog/./src/api/user.js","webpack://react-blog/./src/pages/PersonCenter/index.jsx","webpack://react-blog/./src/pages/PersonCenter/index.module.scss?3bbd","webpack://react-blog/./src/config/avatarApi.js","webpack://react-blog/./src/utils/request.js","webpack://react-blog/./src/config/api.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\n// 获取用户信息\r\nexport const getUserInfo = () => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/user/getUserInfo'\r\n  })\r\n}\r\n\r\n// 修改用户信息\r\nexport const updateUserInfo = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/user/updateUserInfo',\r\n    data\r\n  })\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Input, message, Upload } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styles from './index.module.scss'\r\nimport avatarApi from '@/config/avatarApi'\r\nimport { getToken } from '@/utils/storage'\r\nimport { updateUserInfo, getUserInfo } from '@/api/user'\r\nimport { updateUser } from '@/store/actions/user'\r\n\r\nconst { TextArea } = Input\r\n\r\nconst getBase64 = (img, callback) => {\r\n  const reader = new FileReader()\r\n  reader.addEventListener('load', () => callback(reader.result))\r\n  reader.readAsDataURL(img)\r\n}\r\n\r\nconst beforeUpload = file => {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!')\r\n  }\r\n\r\n  const isLt2M = file.size / 1024 / 1024 < 0.1\r\n\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 100K!')\r\n  }\r\n\r\n  return isJpgOrPng && isLt2M\r\n}\r\n\r\nfunction PersonCenter() {\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n  const [btnLoading, setBtnLoading] = useState(false)\r\n\r\n  // 表单保存\r\n  const onFinish = async values => {\r\n    try {\r\n      setBtnLoading(true)\r\n      const res = await updateUserInfo(values)\r\n      if (res.code === 200) {\r\n        message.success('保存成功')\r\n        dispatch(updateUser(res.data.newUserInfo))\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      message.error('保存失败，请稍后重试')\r\n    } finally {\r\n      setBtnLoading(false)\r\n    }\r\n  }\r\n\r\n  // 表单保存失败\r\n  const onFinishFailed = errorInfo => {\r\n    message.error(errorInfo)\r\n  }\r\n\r\n  /**\r\n   * 头像上传\r\n   */\r\n  const [loading, setLoading] = useState(false)\r\n  const [imageUrl, setImageUrl] = useState()\r\n\r\n  const handleChange = async info => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true)\r\n      return\r\n    }\r\n\r\n    if (info.file.status === 'done') {\r\n      const res = await getUserInfo()\r\n      if (res.code === 200) {\r\n        dispatch(updateUser(res.data.user))\r\n      }\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, url => {\r\n        setLoading(false)\r\n        setImageUrl(url)\r\n      })\r\n    }\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div\r\n        style={{\r\n          marginTop: 8\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"person-center\">\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{\r\n            span: 3\r\n          }}\r\n          wrapperCol={{\r\n            span: 20\r\n          }}\r\n          initialValues={{\r\n            nickname: user.nickname,\r\n            username: user.username,\r\n            personSignature: user.personSignature ? user.personSignature : ''\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"昵称\"\r\n            name=\"nickname\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input maxLength={7} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!'\r\n              }\r\n            ]}\r\n          >\r\n            <Input disabled />\r\n          </Form.Item>\r\n          <Form.Item label=\"签名\" name=\"personSignature\">\r\n            <TextArea showCount maxLength={50} />\r\n          </Form.Item>\r\n          <Form.Item label=\"头像\">\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader\"\r\n              showUploadList={false}\r\n              headers={{\r\n                Authorization: getToken().token\r\n              }}\r\n              action={avatarApi}\r\n              beforeUpload={beforeUpload}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl ? (\r\n                <img\r\n                  src={imageUrl}\r\n                  alt=\"avatar\"\r\n                  style={{\r\n                    width: '100%'\r\n                  }}\r\n                />\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 3, span: 16 }}>\r\n            <Button loading={btnLoading} type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonCenter\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PiIyTMdesciussCFD2ex\"};","const env = process.env.NODE_ENV\r\n\r\nconst config = {\r\n  development: {\r\n    baseURL: 'http://localhost:8001/user/updateAvatar'\r\n  },\r\n  production: {\r\n    baseURL: 'http://47.96.11.61:80/api/user/updateAvatar'\r\n  }\r\n}\r\n\r\nexport default config[env].baseURL\r\n","import axios from 'axios'\nimport { getToken } from './storage'\nimport baseURL from '@/config/api'\n\nconst http = axios.create({\n  baseURL,\n  timeout: 50000\n})\n\nhttp.interceptors.request.use(config => {\n  const { token } = getToken()\n  config.headers.Authorization = token\n  return config\n})\n\nhttp.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  err => {\n    if (!err.response) {\n      console.log('网络繁忙，请稍后重试')\n      // return Promise.reject(err);\n    }\n    return Promise.reject(err)\n  }\n)\n\nexport default http\n","const env = process.env.NODE_ENV\r\n\r\nconst config = {\r\n  development: {\r\n    baseURL: '/api'\r\n  },\r\n  production: {\r\n    baseURL: '/api'\r\n  }\r\n}\r\n\r\nexport default config[env].baseURL\r\n"],"names":["getUserInfo","request","method","url","updateUserInfo","data","i","TextArea","Input","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","message","isLt2M","size","user","useSelector","state","dispatch","useDispatch","useState","btnLoading","setBtnLoading","onFinish","values","res","code","updateUser","newUserInfo","console","log","loading","setLoading","imageUrl","setImageUrl","handleChange","info","status","originFileObj","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","className","name","labelCol","span","wrapperCol","initialValues","nickname","username","personSignature","onFinishFailed","errorInfo","autoComplete","label","rules","required","maxLength","disabled","showCount","listType","showUploadList","headers","Authorization","getToken","token","action","onChange","src","alt","width","offset","htmlType","http","axios","baseURL","timeout","interceptors","use","config","response","err","Promise","reject"],"sourceRoot":""}