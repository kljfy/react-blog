{"version":3,"file":"static/js/271.0805023f.js","mappings":"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","sources":["webpack://react-blog/./src/api/article.js","webpack://react-blog/./src/pages/ManageArticle/index.jsx","webpack://react-blog/./src/pages/ManageArticle/index.module.scss?dbd9","webpack://react-blog/./src/utils/request.js","webpack://react-blog/./src/config/api.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\n// 添加文章\r\nexport const addArticle = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/add',\r\n    data\r\n  })\r\n}\r\n\r\n// 查询首页文章列表\r\nexport const getHomeArticleList = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/getHomeList',\r\n    params\r\n  })\r\n}\r\n\r\n// 查询文章列表\r\nexport const getArticleList = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/getArticleList',\r\n    params: {\r\n      keyword: data.keyword\r\n    },\r\n    data: {\r\n      ...data.pageParams\r\n    }\r\n  })\r\n}\r\n\r\n// 查询文章信息\r\nexport const getArticleInfo = articleId => {\r\n  return request({\r\n    method: 'get',\r\n    url: `/article/getArticleInfo/${articleId}`\r\n  })\r\n}\r\n\r\n// 修改文章信息\r\nexport const updateArticleInfo = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/updateById',\r\n    data\r\n  })\r\n}\r\n\r\n// 根据 id 删除文章\r\nexport const deleteArticleById = id => {\r\n  return request({\r\n    method: 'get',\r\n    url: `/article/deleteById/${id}`\r\n  })\r\n}\r\n\r\n// 上传文章图片\r\nexport const uploadArticlePicture = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/oss/uploadArticlePicture',\r\n    data\r\n  })\r\n}\r\n\r\n// 根据url删除文章图片\r\nexport const deleteArticlePicture = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/deleteMdPicture',\r\n    params\r\n  })\r\n}\r\n\r\n// 根据文章id查看当前已绑定该文章的图片\r\nexport const getPicturesByArticleId = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/getPicturesByArticleId',\r\n    params\r\n  })\r\n}\r\n\r\n// 清理未绑定的图片\r\nexport const deleteNoBindPicture = () => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/deleteNoBindPicture',\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Input, Space, Table, Pagination, message, Popconfirm } from 'antd'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styles from './index.module.scss'\r\nimport {\r\n  getArticleList as getArticleListApi,\r\n  deleteArticleById\r\n} from '@/api/article'\r\n\r\nexport default function ManageArticle() {\r\n  const history = useHistory()\r\n  const { Search } = Input\r\n  const [keyword, setKeyword] = useState('')\r\n  const [data, setData] = useState([])\r\n  const [tableLoading, setTableLoading] = useState(false)\r\n\r\n  const [pageParams, setPageParams] = useState({\r\n    current: 1,\r\n    size: 10,\r\n    total: 30\r\n  })\r\n\r\n  const getArticleList = async (keyword, pageParams) => {\r\n    setTableLoading(true)\r\n    try {\r\n      const res = await getArticleListApi({\r\n        keyword,\r\n        pageParams\r\n      })\r\n      if (res.code === 200) {\r\n        const { page } = res.data\r\n        setPageParams({\r\n          current: page.page,\r\n          size: page.size,\r\n          total: page.total\r\n        })\r\n        setData(res.data.list)\r\n      } else {\r\n        message.error('获取数据失败，请稍后重试')\r\n      }\r\n      setTableLoading(false)\r\n    } catch (e) {\r\n      setTableLoading(false)\r\n      message.error('获取数据失败，请稍后重试')\r\n    }\r\n  }\r\n  const onSearch = value => {\r\n    setKeyword(value)\r\n    getArticleList(value, {\r\n      page: pageParams.current,\r\n      size: pageParams.size\r\n    })\r\n  }\r\n\r\n  const handlePaginationChange = (page, size) => {\r\n    getArticleList(keyword, {\r\n      page,\r\n      size\r\n    })\r\n  }\r\n\r\n  const goToView = id => {\r\n    history.push('/home/articleView', { articleId: id })\r\n  }\r\n  const goToEdit = id => {\r\n    history.push('/home/articleEdit', { articleId: id, isEdit: true })\r\n  }\r\n  const handleConfirmDelete = async id => {\r\n    try {\r\n      const res = await deleteArticleById(id)\r\n      if (res.code === 200) {\r\n        message.success('删除成功')\r\n        getArticleList(keyword, {\r\n          page: pageParams.current,\r\n          size: pageParams.size\r\n        })\r\n      } else {\r\n        message.error('删除失败，请稍后重试')\r\n      }\r\n    } catch (e) {\r\n      message.error('删除失败，请稍后重试')\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '标题',\r\n      dataIndex: 'title',\r\n      key: 'title',\r\n      render: (title, record) => (\r\n        <a onClick={() => goToView(record.id)}>{title}</a>\r\n      )\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'gmtCreate',\r\n      key: 'createTime',\r\n      width: 300,\r\n      render: createTime => <span>{createTime}</span>\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      width: 250,\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => goToEdit(record.id)}>编辑</a>\r\n          <Popconfirm\r\n            title=\"确认删除\"\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n            onConfirm={() => handleConfirmDelete(record.id)}\r\n          >\r\n            <a href=\"#\">删除</a>\r\n          </Popconfirm>\r\n        </Space>\r\n      )\r\n    }\r\n  ]\r\n  useEffect(() => {\r\n    getArticleList(keyword, { page: pageParams.current, size: pageParams.size })\r\n  }, [])\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"manage-body\">\r\n        <div className=\"input-search\">\r\n          <Search\r\n            style={{ width: '400px' }}\r\n            placeholder=\"请输入要查询的文章\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n            enterButton\r\n          />\r\n        </div>\r\n        <div className=\"article-manage-table\">\r\n          <Table\r\n            loading={tableLoading}\r\n            columns={columns}\r\n            dataSource={data}\r\n            rowKey=\"id\"\r\n            pagination={false}\r\n          />\r\n        </div>\r\n        <div className=\"pagination-my\">\r\n          <Pagination\r\n            showQuickJumper\r\n            showSizeChanger\r\n            pageSizeOptions={[10, 20]}\r\n            current={pageParams.current}\r\n            pageSize={pageParams.size}\r\n            total={pageParams.total}\r\n            showTotal={total => `总 ${total} 条`}\r\n            onChange={handlePaginationChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lgcvSUik2PoQHAkPp0Q2\"};","import axios from 'axios'\nimport { getToken } from './storage'\nimport baseURL from '@/config/api'\n\nconst http = axios.create({\n  baseURL,\n  timeout: 50000\n})\n\nhttp.interceptors.request.use(config => {\n  const { token } = getToken()\n  config.headers.Authorization = token\n  return config\n})\n\nhttp.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  err => {\n    if (!err.response) {\n      console.log('网络繁忙，请稍后重试')\n      // return Promise.reject(err);\n    }\n    return Promise.reject(err)\n  }\n)\n\nexport default http\n","const env = process.env.NODE_ENV\r\n\r\nconst config = {\r\n  development: {\r\n    baseURL: '/api'\r\n  },\r\n  production: {\r\n    baseURL: '/api'\r\n  }\r\n}\r\n\r\nexport default config[env].baseURL\r\n"],"names":["addArticle","data","request","method","url","getHomeArticleList","params","getArticleList","keyword","pageParams","getArticleInfo","articleId","updateArticleInfo","deleteArticleById","id","uploadArticlePicture","deleteArticlePicture","getPicturesByArticleId","deleteNoBindPicture","i","ManageArticle","history","useHistory","Search","Input","useState","setKeyword","setData","tableLoading","setTableLoading","current","size","total","setPageParams","getArticleListApi","res","code","page","list","message","handleConfirmDelete","columns","title","dataIndex","key","render","record","onClick","push","width","createTime","_","isEdit","okText","cancelText","onConfirm","href","useEffect","className","style","placeholder","allowClear","onSearch","value","enterButton","loading","dataSource","rowKey","pagination","showQuickJumper","showSizeChanger","pageSizeOptions","pageSize","showTotal","onChange","http","axios","baseURL","timeout","interceptors","use","config","token","getToken","headers","Authorization","response","err","console","log","Promise","reject"],"sourceRoot":""}