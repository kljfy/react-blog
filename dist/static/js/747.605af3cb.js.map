{"version":3,"file":"static/js/747.605af3cb.js","mappings":"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","sources":["webpack://react-blog/./src/api/article.js","webpack://react-blog/./src/pages/MdArticle/Edit/components/ImgFlowItem/index.jsx","webpack://react-blog/./src/pages/MdArticle/Edit/components/ImgFlowItem/index.module.scss?dd46","webpack://react-blog/./src/pages/MdArticle/Edit/index.jsx","webpack://react-blog/./src/pages/MdArticle/Edit/index.module.scss?ddcc","webpack://react-blog/./src/utils/request.js","webpack://react-blog/./src/config/api.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\n// 添加文章\r\nexport const addArticle = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/add',\r\n    data\r\n  })\r\n}\r\n\r\n// 查询首页文章列表\r\nexport const getHomeArticleList = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/getHomeList',\r\n    params\r\n  })\r\n}\r\n\r\n// 查询文章列表\r\nexport const getArticleList = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/getArticleList',\r\n    params: {\r\n      keyword: data.keyword\r\n    },\r\n    data: {\r\n      ...data.pageParams\r\n    }\r\n  })\r\n}\r\n\r\n// 查询文章信息\r\nexport const getArticleInfo = articleId => {\r\n  return request({\r\n    method: 'get',\r\n    url: `/article/getArticleInfo/${articleId}`\r\n  })\r\n}\r\n\r\n// 修改文章信息\r\nexport const updateArticleInfo = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/article/updateById',\r\n    data\r\n  })\r\n}\r\n\r\n// 根据 id 删除文章\r\nexport const deleteArticleById = id => {\r\n  return request({\r\n    method: 'get',\r\n    url: `/article/deleteById/${id}`\r\n  })\r\n}\r\n\r\n// 上传文章图片\r\nexport const uploadArticlePicture = data => {\r\n  return request({\r\n    method: 'post',\r\n    url: '/oss/uploadArticlePicture',\r\n    data\r\n  })\r\n}\r\n\r\n// 根据url删除文章图片\r\nexport const deleteArticlePicture = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/deleteMdPicture',\r\n    params\r\n  })\r\n}\r\n\r\n// 根据文章id查看当前已绑定该文章的图片\r\nexport const getPicturesByArticleId = params => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/getPicturesByArticleId',\r\n    params\r\n  })\r\n}\r\n\r\n// 清理未绑定的图片\r\nexport const deleteNoBindPicture = () => {\r\n  return request({\r\n    method: 'get',\r\n    url: '/article/deleteNoBindPicture',\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Image, Button, Popconfirm, message } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './index.module.scss'\r\nimport { deleteArticlePicture } from '@/api/article'\r\n\r\nfunction ImgFlowItem({ imgInfo, onDelete }) {\r\n  const handleDeletePicture = async () => {\r\n    try {\r\n      const res = await deleteArticlePicture({ imgPath: imgInfo.imgPath, imgId: imgInfo.id })\r\n      if (res.code === 200) {\r\n        message.success('删除成功');\r\n        onDelete()\r\n      } else {\r\n        message.error('删除失败，请稍后重试')\r\n      }\r\n    } catch (e) {\r\n      message.error('删除失败，请稍后重试')\r\n    }\r\n  }\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"img-flow-item\">\r\n        <Image style={{ display: 'block' }} width={240} src={imgInfo.imgUrl} />\r\n        <p className=\"picture-title\">{imgInfo.imgPath.slice(61)}</p>\r\n        <div className=\"operate-btn\">\r\n          <Popconfirm\r\n            title=\"是否确认删除\"\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n            onConfirm={handleDeletePicture}\r\n          >\r\n            <Button size=\"small\">删除</Button>\r\n          </Popconfirm>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nImgFlowItem.propTypes = {\r\n  imgInfo: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ImgFlowItem\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NQ8js4aDhMhGbBCI4DXJ\"};","import React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Input, message, Upload, Modal, Spin, Empty } from 'antd'\r\nimport { UploadOutlined, LeftOutlined } from '@ant-design/icons'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport styles from './index.module.scss'\r\nimport {\r\n  addArticle,\r\n  updateArticleInfo,\r\n  getArticleInfo,\r\n  uploadArticlePicture,\r\n  getPicturesByArticleId,\r\n  deleteNoBindPicture\r\n} from '@/api/article'\r\nimport ImgFlowItem from './components/ImgFlowItem'\r\n\r\nexport default function MdEdit() {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const [form] = Form.useForm()\r\n  const [mdValue, setMdValue] = useState('')\r\n\r\n  const isEdit = location.state?.isEdit === true\r\n\r\n  useEffect(async () => {\r\n    // 进入时 清空之前未绑定的图片\r\n    deleteNoBindPicture()\r\n    if (isEdit) {\r\n      try {\r\n        const {\r\n          state: { articleId }\r\n        } = location\r\n        const res = await getArticleInfo(articleId)\r\n        if (res.code === 200) {\r\n          const { articleInfo } = res.data\r\n          setMdValue(articleInfo.content)\r\n          form.setFieldsValue({\r\n            title: articleInfo.title,\r\n            description: articleInfo.description,\r\n            content: articleInfo.content\r\n          })\r\n        } else {\r\n          message.error('获取文章详情失败，请稍后重试')\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const onMdChange = val => {\r\n    setMdValue(val)\r\n    form.setFieldValue('content', val)\r\n  }\r\n  // 保存文章\r\n  const onFinish = async values => {\r\n    try {\r\n      const fn = isEdit ? updateArticleInfo : addArticle\r\n      let data\r\n      if (isEdit) {\r\n        data = {\r\n          id: location.state.articleId,\r\n          ...values\r\n        }\r\n      } else {\r\n        data = values\r\n      }\r\n      const res = await fn(data)\r\n      if (res.code === 200) {\r\n        message.success('保存成功')\r\n        history.go(-1)\r\n      } else {\r\n        message.error('保存失败，请稍后重试')\r\n      }\r\n    } catch (e) {\r\n      message.error('保存失败，请稍后重试')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 上传图片\r\n   */\r\n  const { TextArea } = Input\r\n  const [fileList, setFileList] = useState([])\r\n  const [uploading, setUploading] = useState(false)\r\n  const [isShowUrl, setIsShowUrl] = useState(false)\r\n  const [urlValue, setUrlValue] = useState('')\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData()\r\n    fileList.forEach(file => {\r\n      formData.append('file', file)\r\n    })\r\n    setUploading(true) // You can use any AJAX library you like\r\n\r\n    const res = await uploadArticlePicture(formData)\r\n    if (res.code === 200) {\r\n      message.success('上传成功')\r\n      setUrlValue(res.data.url)\r\n      setIsShowUrl(true)\r\n      setFileList([])\r\n    }\r\n    setUploading(false)\r\n  }\r\n\r\n  const props = {\r\n    onRemove: file => {\r\n      const index = fileList.indexOf(file)\r\n      const newFileList = fileList.slice()\r\n      newFileList.splice(index, 1)\r\n      setFileList(newFileList)\r\n    },\r\n    beforeUpload: file => {\r\n      setFileList([file])\r\n      return false\r\n    },\r\n    fileList\r\n  }\r\n\r\n  /**\r\n   * 查看图片\r\n   */\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [showPictureLoading, setShowPictureLoading] = useState(false)\r\n  const [pictureList, setPictureList] = useState([])\r\n\r\n  const handleShowPicture = async () => {\r\n    try {\r\n      setIsModalOpen(true)\r\n      setShowPictureLoading(true)\r\n      const res = await getPicturesByArticleId({ articleId: location.state.articleId })\r\n      if (res.code === 200) {\r\n        setPictureList(res.data.list)\r\n      } else {\r\n        message.error('获取图片失败，请稍后重试')\r\n      }\r\n    } catch (e) {\r\n      message.error('获取图片失败，请稍后重试')\r\n    } finally {\r\n      setShowPictureLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"md-view-body\">\r\n        <div className=\"upload-div\">\r\n          <div className=\"upload-btn\">\r\n            <Upload {...props}>\r\n              <Button loading={uploading} icon={<UploadOutlined />}>\r\n                上传图片\r\n              </Button>\r\n            </Upload>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={handleUpload}\r\n              disabled={fileList.length === 0}\r\n              loading={uploading}\r\n              style={{\r\n                marginTop: 16\r\n              }}\r\n            >\r\n              {uploading ? '上传中...' : '开始上传'}\r\n            </Button>\r\n          </div>\r\n          {isShowUrl ? <TextArea rows={6} placeholder=\"上传的图片url\" value={urlValue} /> : null}\r\n        </div>\r\n        <Form\r\n          form={form}\r\n          name=\"basic\"\r\n          labelCol={{ span: 2 }}\r\n          wrapperCol={{ span: 22 }}\r\n          initialValues={{ title: '', description: '', content: '' }}\r\n          autoComplete=\"off\"\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            wrapperCol={{\r\n              offset: 2,\r\n              span: 16\r\n            }}\r\n          >\r\n            <Button\r\n              className=\"margin-right-8px\"\r\n              icon={<LeftOutlined />}\r\n              htmlType=\"button\"\r\n              onClick={() => history.go(-1)}\r\n            >\r\n              返回\r\n            </Button>\r\n            {isEdit ? (\r\n              <Button className=\"margin-right-8px\" htmlType=\"button\" onClick={handleShowPicture}>\r\n                查看图片\r\n              </Button>\r\n            ) : null}\r\n            <Button className=\"margin-right-8px\" type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"文章标题\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: '请填写文章标题!' }]}\r\n          >\r\n            <Input allowClear />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"文章描述\" name=\"description\">\r\n            <Input allowClear />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"文章内容\"\r\n            name=\"content\"\r\n            rules={[{ required: true, message: '请输入文章内容!' }]}\r\n          >\r\n            <div className=\"md-edit\">\r\n              <MDEditor value={mdValue} onChange={onMdChange} />\r\n            </div>\r\n          </Form.Item>\r\n          {/* <Form.Item\r\n            wrapperCol={{\r\n              offset: 2,\r\n              span: 16\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Form.Item> */}\r\n        </Form>\r\n      </div>\r\n      <Modal\r\n        width={1200}\r\n        title=\"查看图片\"\r\n        maskClosable={false}\r\n        destroyOnClose\r\n        footer={null}\r\n        wrapClassName=\"md-picture-flow\"\r\n        open={isModalOpen}\r\n        onCancel={() => setIsModalOpen(false)}\r\n      >\r\n        <Spin spinning={showPictureLoading}>\r\n          <div style={{ overflowY: 'auto', height: '500px' }}>\r\n            {pictureList.length > 0 ? (\r\n              <div className=\"flow-content\">\r\n                {pictureList.map(item => (\r\n                  <ImgFlowItem key={item.id} imgInfo={item} onDelete={handleShowPicture} />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <Empty />\r\n            )}\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WZlCLnz387afgq6lbpZR\"};","import axios from 'axios'\nimport { getToken } from './storage'\nimport baseURL from '@/config/api'\n\nconst http = axios.create({\n  baseURL,\n  timeout: 50000\n})\n\nhttp.interceptors.request.use(config => {\n  const { token } = getToken()\n  config.headers.Authorization = token\n  return config\n})\n\nhttp.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  err => {\n    if (!err.response) {\n      console.log('网络繁忙，请稍后重试')\n      // return Promise.reject(err);\n    }\n    return Promise.reject(err)\n  }\n)\n\nexport default http\n","const env = process.env.NODE_ENV\r\n\r\nconst config = {\r\n  development: {\r\n    baseURL: '/api'\r\n  },\r\n  production: {\r\n    baseURL: '/api'\r\n  }\r\n}\r\n\r\nexport default config[env].baseURL\r\n"],"names":["addArticle","data","request","method","url","getHomeArticleList","params","getArticleList","keyword","pageParams","getArticleInfo","articleId","updateArticleInfo","deleteArticleById","id","uploadArticlePicture","deleteArticlePicture","getPicturesByArticleId","deleteNoBindPicture","i","ImgFlowItem","imgInfo","onDelete","handleDeletePicture","imgPath","imgId","code","message","className","style","display","width","src","imgUrl","slice","title","okText","cancelText","onConfirm","size","propTypes","PropTypes","MdEdit","history","useHistory","location","useLocation","form","Form","useState","mdValue","setMdValue","isEdit","state","useEffect","res","articleInfo","content","setFieldsValue","description","console","log","onFinish","values","fn","go","TextArea","Input","fileList","setFileList","uploading","setUploading","isShowUrl","setIsShowUrl","urlValue","setUrlValue","handleUpload","formData","FormData","forEach","file","append","props","onRemove","index","indexOf","newFileList","splice","beforeUpload","isModalOpen","setIsModalOpen","showPictureLoading","setShowPictureLoading","pictureList","setPictureList","handleShowPicture","list","loading","icon","UploadOutlined","type","onClick","disabled","length","marginTop","rows","placeholder","value","name","labelCol","span","wrapperCol","initialValues","autoComplete","offset","LeftOutlined","htmlType","label","rules","required","allowClear","onChange","val","setFieldValue","maskClosable","destroyOnClose","footer","wrapClassName","open","onCancel","spinning","overflowY","height","map","item","key","http","axios","baseURL","timeout","interceptors","use","config","token","getToken","headers","Authorization","response","err","Promise","reject"],"sourceRoot":""}